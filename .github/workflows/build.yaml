name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        required: true
        default: "main"

jobs:
  build:
    name: Make build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Insall system dependences
        run: sudo apt-get install -y "$PACKAGES"
        env:
          PACKAGES: tar
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Install go dependences
        run: go mod tidy
      - name: Build project
        run: go build -ldflags="$LDFLAGS" -o "$APP" cmd/telecho/main.go
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
          LDFLAGS: "-w -s -X main.vers=${{ vars.RELEASE_TAG }}"
          APP: ${{ github.event.repository.name }}
      - name: Make release tar
        run: tar -cvzf ${{ github.event.repository.name }}-${{ vars.RELEASE_TAG }}-linux-amd64.tar.gz "$FILES"
        env:
          FILES: ${{ github.event.repository.name }}

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ vars.RELEASE_TAG }}
          draft: true
          prerelease: false

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.event.repository.name }}-${{ vars.RELEASE_TAG }}-linux-amd64.tar.gz
          asset_name: ${{ github.event.repository.name }}-${{ vars.RELEASE_TAG }}-linux-amd64.tar.gz
          asset_content_type: application/zip

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
